# To start/stop the services, use docker-compose up/down
version: "3.2"

services:
  # your app(s)
  imse-example:
    build:
      dockerfile: Dockerfile.example
      # set context for build command explicitly
      context: ./src
    # MATRIKEL_NR is automatically imported from the .env file
    image: imse/${MATRIKEL_NR}_example:latest
    ports:
      - target: 80
        published: 4000
        protocol: tcp
    environment:
      - MODE=Prod
    networks:
      imsenet:

  # databases
  # similar setup is possible for MariaDB, Postgress, MongoDB, ...
  redis:
    image: redis
    # ports are not necessarily exposed to the host network
    # but during development it might come handy to do so
    # ports:
    #   - target: 6379
    #     published: 6379

    # if data should be persited during container restart
    # volumes:
    #   - imsedata:/data

    # mounts can also be linked to a folder:
    # volumes:
    # - type: bind
    #   source: ./data/mongo
    #   target: /data
    networks:
      imsenet:

  # utilities
  # it's convenient to have monitoring tools ready and setup if needed
  # E.g. MyPHPAdmin, Mongo-Express are also available as container
  redis-stats:
    image: insready/redis-stat
    # agruments from --command are appended to container
    command: --server redis
    # start order
    depends_on:
      - redis
    # expose web front to host network
    ports:
      - target: 63790
        published: 8082
    networks:
      imsenet:

networks:
  imsenet:
    # allow to connect container manually.
    attachable: true
